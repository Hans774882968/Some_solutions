111
1 2
1 1 1
-1.5 -1.5 -0.5
1 1
1 1 1
-1 -1 -1
2 4
0 2 2
-1.7320508075689 -3 0
2 4
0 2 2
-1.7 -3 0
2 4
0 2 2
0 -3 0
//Case 1: 0.3855293381
Case 2: 0.5857864376
约0.5s：0.5000000024
接近0.5s：0.4563114993
1/3s
我们发现圆锥表面方程是：
x*x+y*y=rr*rr
rr=(H-z)/z*R
每个时刻的位置表示为：
x=X0+vx*t
y=Y0+vy*t
z=Z0+vz*t
代入可知，指标x*x+y*y-rr*rr是一个二次函数，该函数的t较小的零点为所求。但是我们不能直接去找根。因为二次函数有凸性，所以我们
可以先三分找到最小值，然后在新的范围里二分查找零点。这时你会想，二次函数不一定开口向上呀？因为题目保证一定会撞到，且已知初始
点是“指标”大于0的（绝大多数情况下），所以得出开口一定向上。
剩下的问题，只有确定三分的右边界了。单独观察“指标”不容易，但我们发现上述指标等价于：z<=H时是一个特定斜率无限向下的圆锥
面，而z>H时与上述圆锥面对称。这意味着，如果vz>0，那么向上穿透圆锥以后，之后都保证会在两个圆锥的外面，即“指标”永远大于0。
而vz<0的情况是平凡的。综上，在任何情况下指标都是开口向上的二次函数，可以放心地把右边界指定为一个足够大的数。

开根号提找根精度技巧：三分阶段不要紧，但二分查找根的阶段，这个指标x*x+y*y-rr*rr可能十分小，导致溢出之类的问题，造成精度损失。
因此我们把指标改成sqrt(x*x + y*y) - rr;这样1e-16变成1e-8，有利于提高求出的解的精度。前几个wa大概都是因为没给指标开根号。

解法2：直接手算那个一元二次方程的系数（目测即可，不需要动笔），然后check两个根。
虽然代码短，但是我认为它缺乏解法1（三分+二分）的普适性，不如解法1。
v2的代码在上面3rd样例里面跑出了nan，所以加了一句double xx = max(0.0,b*b - 4*a*c);防止跑出nan的。